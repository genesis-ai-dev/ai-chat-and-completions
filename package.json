{
  "name": "translators-copilot",
  "displayName": "Translator's Copilot",
  "description": "A minimalist AI Copilot for translation assistance.",
  "repository": {
    "url": "https://github.com/genesis-ai-dev/ai-chat-and-completions.git"
  },
  "icon": "logo.png",
  "publisher": "wuweinero",
  "version": "1.1.3",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:scripture"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": [
      {
        "type": "object",
        "title": "Required",
        "properties": {
          "translators-copilot.api_key": {
            "type": "string",
            "default": "",
            "description": "Your own openai API key. Ignorable for local LLM."
          }
        }
      },
      {
        "type": "object",
        "title": "General",
        "properties": {
          "translators-copilot.sourceTextSelectionMode": {
            "type": "string",
            "default": "auto",
            "description": "The method of selecting the source text. If set to manual, use 'ctrl + s, ctrl + b' to change the source text.",
            "enum": ["auto", "manual"]
          },
          "translators-copilot.contextSize": {
            "type": "string",
            "default": "large",
            "description": "The size of the context to be used for completion.",
            "enum": ["small", "medium", "large"]
          },
          "translators-copilot.additionalResourcesDirectory": {
            "type": "string",
            "default": "",
            "description": "The directory path containing additional resources for completion context. Will read all files in directory and put them in the context. No recources if path is invalid."
          }
        }
      }, 
      {
        "type": "object",
        "title": "Defaults Recommended",
        "properties": {
          "translators-copilot.llmEndpoint": {
            "type": "string",
            "default": "https://api.openai.com/v1",
            "description": "The endpoint for the completion API. Currently only supports OpenAI API."
          },
          "translators-copilot.model": {
            "type": "string",
            "default": "gpt-4o",
            "description": "Model name selected for inference. Ignorable for local LLM."
          },
          "translators-copilot.sourceBookWhitelist": {
            "type": "string",
            "default": "",
            "description": "Limits context building to specified books. Leave empty to include all. We recommend to leave empty for best results."
          },
          "translators-copilot.experimentalContextOmission": {
            "type": "boolean",
            "default": "false",
            "description": "Will omit reference to the Bible in the API request. This removes scripture biase."
          }
        }
      }
    ],
    "commands": [
      {
        "command": "extension.triggerInlineCompletion",
        "title": "Auto Completion"
      }
    ],
    "keybindings": [
      {
        "command": "extension.triggerInlineCompletion",
        "key": "alt+q",
        "when": "editorTextFocus && !inputDisabled"
      },
      {
        "command": "extension.manualSourceTextSelection",
        "key": "ctrl+s ctrl+b",
        "mac": "cmd+s cmd+b",
        "when": "config.translators-copilot.sourceTextSelectionMode == 'manual'"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "sideMenu",
          "title": "Translator's Copilot",
          "icon": "media/dark.svg"
        }
      ]
    },
    "views": {
      "sideMenu": [
        {
          "id": "sideView",
          "name": "",
          "type": "webview"
        }
      ]
    },
    "menus": {
      "editor/context": [
        {
          "command": "extension.triggerInlineCompletion",
          "group": "z"
        }
      ]
    }
  },
  "scripts": {
    "lint": "eslint .",
    "pretest": "npm run lint",
    "test": "vscode-test",
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "format": "prettier --write ."
  },
  "devDependencies": {
    "@types/mocha": "^10.0.6",
    "@types/node": "18.x",
    "@types/vscode": "^1.90.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vscode/test-cli": "^0.0.4",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.56.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "@types/node-cache": "^4.2.5",
    "axios": "^1.6.5",
    "node-cache": "^5.1.2"
  }
}
